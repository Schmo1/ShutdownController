<UserControl x:Class="ShutdownController.Views.DownUploadView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:local="clr-namespace:ShutdownController.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="500">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Cartesian chart -->
        <Border Style="{StaticResource borderBlueTheme}" Margin="25,15,15,0" Grid.ColumnSpan="2">
            <Grid>
                <TextBlock Text="Overview" Style="{StaticResource textBlockChart}" Margin=" 15 5 0 0"/>
                <local:LegendsViewDownUp HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 15 20 0" />
                
                
                <!-- Main Chart -->
                <lvc:CartesianChart Margin="15 35 15 15" LegendLocation="None" DisableAnimations="{Binding SavePerformance}">


                    
                    <lvc:CartesianChart.DataTooltip>
                        <lvc:DefaultTooltip Background="#b3e6ff" Foreground="#ffffff" BulletSize="0" Opacity="0.9" ShowTitle="False" />
                    </lvc:CartesianChart.DataTooltip>

                    
                    <!--Change color of the Axis section-->
                    <lvc:CartesianChart.Resources>
                        
                        <!--Section Style-->
                        <Style TargetType="lvc:AxisSection">
                            <Setter Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush Opacity="0.2">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="#ffffff" Offset="0.4"/>
                                        <GradientStop Color="#ffffff" Offset="0.6"/>
                                        <GradientStop Color="Transparent" Offset="1.2"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ObserveActive}" Value="true">
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#ed4222" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsValueUnderObservingSpeed}" Value="true">
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#2af822" Opacity="0.3"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        
                        <!--Axis Style-->
                        <!--Download Axis-->
                        <Style TargetType="lvc:LineSeries" x:Key="DownloadAxisStyle">
                            <Setter Property="StrokeThickness" Value="4" />
                            <Setter Property="PointGeometrySize" Value="0" />
                            <Setter Property="Fill" Value="Transparent"/>
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="Stroke">
                                <Setter.Value>
                                    <LinearGradientBrush>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="#709999" Offset="0.23"/>
                                        <GradientStop Color="Transparent" Offset="2.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <!--Set visibility when Download is active-->
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=UploadObservingPressed}" Value="true" /> <!--AND Condition -->
                                        <Condition Binding="{Binding Path=ObserveActive}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                        <!--Upload Axis-->
                        <Style TargetType="lvc:LineSeries" x:Key="UploadAxisStyle">
                            <Setter Property="StrokeThickness" Value="4" />
                            <Setter Property="PointGeometrySize" Value="0" />
                            <Setter Property="Fill" Value="Transparent"/>
                            
                            <Setter Property="Stroke">
                                
                                <Setter.Value>
                                    <LinearGradientBrush>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="#faaa66" Offset="0.23"/>
                                        <GradientStop Color="Transparent" Offset="2.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            
                            <!--Set visibility when Download is active-->
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=DownloadObservingPressed}" Value="true" />
                                        <Condition Binding="{Binding Path=ObserveActive}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                            
                        </Style>
                    </lvc:CartesianChart.Resources>
                    

                    <!-- X-Axis Values -->
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis Foreground="#aaaaaa" FontSize="14" ShowLabels="True" MaxValue="30" LabelFormatter="{Binding FormatterXAxis}" >
                            <lvc:Axis.Separator>
                                <lvc:Separator StrokeThickness="0" Step="10" />
                            </lvc:Axis.Separator>
                        </lvc:Axis>
                    </lvc:CartesianChart.AxisX>
                

                    <!-- Y-Axis Time -->
                    <lvc:CartesianChart.AxisY>
                        <lvc:Axis MinValue="0" MaxValue="{Binding Path=ScalaMax, Mode=OneWay}" ShowLabels="True" LabelFormatter="{Binding FormatterYAxis}">
                            <lvc:Axis.Separator >
                                <lvc:Separator StrokeThickness="0" Step="{Binding Path=YSteps, Mode=OneWay}"/>
                            </lvc:Axis.Separator>

                            
                            <!--Observing Speed section-->
                            <lvc:Axis.Sections>
                                <lvc:AxisSection Value="0" SectionWidth="{Binding ObservingSpeed}" Label="Good" Stroke="#CDCDCD" StrokeThickness="1" />
                            </lvc:Axis.Sections>
                        </lvc:Axis>
                    
                    </lvc:CartesianChart.AxisY>
                
                

                    <lvc:CartesianChart.Series>
                    <!-- Download -->
                        <lvc:LineSeries Title="Download" Values="{Binding Path=DownloadValues, Mode=OneWay}" Style="{StaticResource DownloadAxisStyle}">
                        </lvc:LineSeries>

                        <!-- Upload -->
                        <lvc:LineSeries Title="Upload" Values="{Binding Path=UploadValues, Mode=OneWay}"  Style="{StaticResource UploadAxisStyle}">

                        </lvc:LineSeries>
                    
                    </lvc:CartesianChart.Series>

                </lvc:CartesianChart>
            </Grid>
            
        </Border>


        <!--Combobox for selected Networkinterface-->
        <ComboBox Grid.Column="1" Grid.Row="1" Margin="7.5 15 15 7.5" Style="{DynamicResource ComboBoxStyle1}" ItemsSource="{Binding NetworkInterfaces}" SelectedItem="{Binding SelectedNetworkInterface}">

        </ComboBox>
        

        <!-- Observe value (Down Upload)-->
        <Border Style="{StaticResource borderBlueTheme}" Margin="7.5,7.5,15,15" Grid.Row="2" Grid.Column="1">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                

                <!-- Downloadbutton-->
                <Button Style="{StaticResource optionButton}" VerticalAlignment="Center" Width="60" Height="60" HorizontalAlignment="Center" Margin="10"
                        Command="{Binding DownloadObservingCommand}">


                    <StackPanel>
                        <Image Source="/Images/Download.png"
                                    Width="23" Margin="0,5,0,0"/>
                        <TextBlock Text="Download" Margin="0,5,0,0" Style="{StaticResource optionButtonText}" FontSize="10" HorizontalAlignment="Center"/>
                    </StackPanel>

                </Button>

                <!-- Uploadbutton-->
                <Button Style="{StaticResource optionButton}"  VerticalAlignment="Center" Width="60" Height="60" Grid.Column="1" Margin="10"
                        Command="{Binding UploadObservingCommand}">

                    <StackPanel>
                        <Image Source="/Images/Upload.png"
                                    Width="23" Margin="0,5,0,0"/>
                        <TextBlock Text="Upload" Margin="0,5,0,0" Style="{StaticResource optionButtonText}" FontSize="10" HorizontalAlignment="Center"/>
                    </StackPanel>

                </Button>

            </Grid>
        </Border>

        <!-- Controll funktions -->
        <Border Style="{StaticResource borderBlueTheme}" Margin="25,15,7.5,15" Grid.Row="1" Grid.RowSpan="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--Seconds-->
                <TextBlock Text="Seconds:" Style="{StaticResource optionButtonText}" VerticalAlignment="Center" Margin="15 10 0 0"/>
                <TextBox Grid.Column="1" Style="{StaticResource inputTextbox}" Margin="7 10 7 0" PreviewTextInput="PreviewTextInputOnlyNumbers" DataObject.Pasting="TextBoxPasting" 
                         Name="SecondsTxtBox" Text="{Binding Seconds}" />
                
                <!--Observing Value-->
                <TextBlock Text="Observing speed (MB/s):" Style="{StaticResource optionButtonText}" Grid.Row="1" VerticalAlignment="Center" Margin="15 0 0 10"/>
                <TextBox Grid.Column="1"  Grid.Row="1" Style="{StaticResource inputTextbox}" Margin="7 0 7 10" PreviewTextInput="PreviewTextInputOnlyNumbersAndPoint" DataObject.Pasting="TextBoxPastingWithPoint" 
                         Name="SpeedTxtBox" Text="{Binding ObservingSpeed}" />
            </Grid>

            

        </Border>
        
        
        
        <!-- Startbutton -->
        <StackPanel Grid.Row="3" Grid.ColumnSpan="2">
            <Button Margin="0 0 0 20" Width="250" Command="{Binding ObserveCommand}" IsEnabled="{Binding InternetConnectionExist}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Content" Value="Start"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.6,1">
                                    <GradientStop Color="#5050ee" Offset="0.0" />
                                    <GradientStop Color="#6060ee" Offset="1.0" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="20" Opacity="0.4"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height" Value="60" />
                        <Setter Property="Width" Value="140" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                        <Setter Property="FontSize" Value="28"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" CornerRadius="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Red"/>
                                            <Setter Property="Content" Value="No internet connection"/>
                                            <Setter Property="FontSize" Value="20" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ObserveActive}" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.6,1">
                                            <GradientStop Color="#ee0000" Offset="0.0" />
                                            <GradientStop Color="#ff0000" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Content" Value="Stop"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ObserveActive}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="#ff5050" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ObserveActive}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Background" Value="#7070ee" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        
        

        
        
        
        
        

    </Grid>
</UserControl>
