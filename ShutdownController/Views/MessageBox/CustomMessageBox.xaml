<Window x:Class="ShutdownController.Views.MessageBox.CustomMessageBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ShutdownController.Views.MessageBox"
        xmlns:strings="clr-namespace:ShutdownController.Resources.MainWindowStrings"
        mc:Ignorable="d"
        ResizeMode="NoResize" 
        WindowStartupLocation="CenterScreen"
        WindowStyle="None" 
        Background="Transparent" 
        AllowsTransparency="True"
        Title="CustomMessageBox" Height="250" Width="400">

    <Border Style="{StaticResource borderBlueTheme}" MouseDown="Border_MouseDown" Margin="20">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Main text -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1">
                <TextBlock Text="{Binding ActionToPerforme, FallbackValue=Shutdown}"
                           Style="{StaticResource optionButtonText}" 
                           HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,4,0"/>
                           
                <TextBlock Text="{x:Static strings:MainWindowStrings.MBActionWillPerformIn}" 
                       Style="{StaticResource optionButtonText}" 
                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </StackPanel>
                

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="2">
                <TextBlock Text="{Binding Path=TimeLeft, FallbackValue=10}" Style="{StaticResource optionButtonText}" />
                <TextBlock Text="s" Style="{StaticResource optionButtonText}" Margin="2,0,0,0" />
            </StackPanel>

            <!-- abort button-->
            <Button HorizontalAlignment="Center" Grid.Row="3" Command="{Binding AbortAction}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Content" Value="{x:Static strings:MainWindowStrings.abort}"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.6,1">
                                    <GradientStop Color="#5050ee" Offset="0.0" />
                                    <GradientStop Color="#6060ee" Offset="1.0" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="20" Opacity="0.4"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height" Value="40" />
                        <Setter Property="Width" Value="120" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.6,1">
                                            <GradientStop Color="#7070ff" Offset="0.0" />
                                            <GradientStop Color="#8080ff" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Border>
</Window>
