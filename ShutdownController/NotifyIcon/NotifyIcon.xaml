    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:ViewModels="clr-namespace:ShutdownController.ViewModels"
                    xmlns:strings="clr-namespace:ShutdownController.Resources.NotifyIcon" 
                    xmlns:fa="http://schemas.fontawesome.io/icons/">


    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="{x:Static strings:NotifyIconStrings.showWindow}" Command="{Binding ShowWindowCommand}">
            <MenuItem.Icon>
                <Image Width="16"
                           Height="16"
                           Source="{Binding ShowIcon}"/>
            </MenuItem.Icon>
        </MenuItem>

        <MenuItem Header="{x:Static strings:NotifyIconStrings.hideWindow}" Command="{Binding HideWindowCommand}"  >
            <MenuItem.Icon>
                <Image Width="16"
                           Height="16"
                           Source="{Binding HideIcon}"/>
            </MenuItem.Icon>
        </MenuItem>


        <Separator/>

        <MenuItem Header="{x:Static strings:NotifyIconStrings.settings}" Command="{Binding ShowSettingsCommand}"  >
            <MenuItem.Icon>
                <Image Width="16"
                           Height="16"
                           Source="/Resources/Images/settingsNotification.png"/>
            </MenuItem.Icon>
        </MenuItem>




        <Separator/>
        <MenuItem Header="{x:Static strings:NotifyIconStrings.exit}" Command="{Binding ExitApplicationCommand}">
            <MenuItem.Icon>
                <Image Width="16"
                           Height="16"
                           Source="/Resources/Images/Icons/Exit.ico" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <tb:TaskbarIcon x:Key="WPFTaskbar"
                    IconSource="/Resources/Images/Icons/Shutdown 32x32.ico"
                    ToolTipText="{Binding SystemTrayMenuText}"
                    DoubleClickCommand="{Binding ShowWindowDoubleClickCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">
        
        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <ViewModels:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>


</ResourceDictionary>